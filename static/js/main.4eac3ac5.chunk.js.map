{"version":3,"sources":["assets/images/logo.png","components/Header.js","components/Sidebar.js","components/Tasks.js","components/Content.js","App.js","index.js"],"names":["Header","className","src","logo","alt","Sidebar","selectedTab","setSelectedTab","console","log","onClick","FORMAT","formatDate","date","format","locale","dateFnsFormat","AddTasks","onCancel","onAddTask","useState","task","setTask","setDate","value","onChange","event","target","disabled","onDayChange","day","placeholder","Date","dayPickerProps","modifiers","before","Tasks_Header_Mapping","INBOX","TODAY","NEXT_7","TaskItems","tasks","tasksToRender","filter","isAfter","isBefore","addDays","isToday","map","text","Tasks","showAddTask","setShowAddTask","setTasks","prevState","newTaskItem","length","Content","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4eac3ac5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.69dc10e0.png\";","import React from 'react';\r\nimport logo from '../assets/images/logo.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"Todolist\"></img>\r\n            </div>\r\n        </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { FaInbox, FaRegCalendarAlt, FaRegCalendar } from 'react-icons/fa';\r\n\r\nconst Sidebar = ({selectedTab,setSelectedTab}) => {\r\n    console.log({selectedTab});\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div \r\n            className={selectedTab === \"INBOX\" ? \"active\" : \"\"}\r\n            onClick={() => setSelectedTab(\"INBOX\")}>\r\n            <FaInbox className=\"icon\" />\r\n            Inbox\r\n            </div>\r\n            <div\r\n            className={selectedTab === \"TODAY\" ? \"active\" : \"\"}\r\n            onClick={() => setSelectedTab(\"TODAY\")}>\r\n            <FaRegCalendarAlt className=\"icon\" />\r\n            Today\r\n            </div>\r\n            <div\r\n            className={selectedTab === \"NEXT_7\" ? \"active\" : \"\"}\r\n            onClick={() => setSelectedTab(\"NEXT_7\")}>\r\n            <FaRegCalendar className=\"icon\" />\r\n            Next 7 days\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React,{ useState } from \"react\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport dateFnsFormat from \"date-fns/format\";\r\nimport isAfter from \"date-fns/isAfter\";\r\nimport isBefore from \"date-fns/isBefore\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport isToday from \"date-fns/isToday\";\r\n\r\nconst FORMAT = \"dd/MM/yyyy\";\r\n\r\nfunction formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n} \r\nconst AddTasks = ({ onCancel, onAddTask }) => {\r\n    const [task, setTask] = useState(\"\");\r\n    const [date, setDate] = useState(null);\r\n    return(\r\n        <div className=\"add-task-dialog\">\r\n            <input value={task} onChange={(event) => setTask(event.target.value)}/>\r\n            <div className=\"add-task-actions-container\">\r\n                <div className=\"btns-container\">\r\n                    <button\r\n                        disabled={!task}\r\n                        className=\"add-btn\"\r\n                        onClick={() => {\r\n                            onAddTask(task,date);\r\n                            onCancel();\r\n                            setTask(\"\");\r\n                        }}>\r\n                        Add Task\r\n                    </button>\r\n                    <button className=\"cancel-btn\" onClick={() => {\r\n                        onCancel();\r\n                        setTask(\"\");\r\n                    }}> Cancel </button>\r\n                </div>\r\n                <div className=\"icons-container\">\r\n                    <DayPickerInput\r\n                        onDayChange={(day) => setDate(day)}\r\n                        placeholder={`${dateFnsFormat(new Date(), FORMAT)}`}\r\n                        formatDate={formatDate}\r\n                        format={FORMAT}\r\n                        dayPickerProps={{\r\n                            modifiers: {\r\n                                disabled:[{before: new Date()}],\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Tasks_Header_Mapping = {\r\n    INBOX: \"Inbox\",\r\n    TODAY: \"Today\",\r\n    NEXT_7: \"Next 7 days\",\r\n};\r\n\r\nconst TaskItems = ({ selectedTab, tasks }) => {\r\n    let tasksToRender = [...tasks];\r\n    if (selectedTab === \"NEXT_7\") {\r\n        tasksToRender = tasksToRender.filter(\r\n            (task) =>\r\n                isAfter(task.date, new Date()) &&\r\n                isBefore(task.date, addDays(new Date(), 7))\r\n        );\r\n    }\r\n    \r\n    if (selectedTab === \"TODAY\") {\r\n        tasksToRender = tasksToRender.filter((task) => isToday(task.date))      \r\n    }\r\n\r\n    return (\r\n        <div className=\"task-items-container\">\r\n            {tasksToRender.map((task) => (\r\n                <div className=\"task-item\">\r\n                    <p>{task.text}</p>\r\n                    <p>{dateFnsFormat(new Date(task.date), FORMAT)}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Tasks = ({selectedTab}) => {\r\n    const [showAddTask, setShowAddTask] = useState(false);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const addNewTask = (text, date) => {\r\n        const newTaskItem = { text, date: date || new Date() };\r\n        setTasks((prevState) => [...prevState, newTaskItem]);\r\n    };\r\n    return (\r\n        <div className=\"tasks\">\r\n            <h1>{Tasks_Header_Mapping[selectedTab]}</h1>\r\n            {selectedTab === \"INBOX\" ? (\r\n                <div\r\n                    className=\"add-task-btn\"\r\n                    onClick={() => setShowAddTask((prevState) => !prevState)}\r\n                >\r\n                    <span className=\"plus\">+</span>\r\n                    <span className=\"add-task-text\">Add Task</span>\r\n                </div>) : null\r\n            }\r\n            {showAddTask && (\r\n                <AddTasks\r\n                    onAddTask={addNewTask}\r\n                    onCancel={() => setShowAddTask(false)} \r\n                />\r\n            )}\r\n            {tasks.length > 0 ? (\r\n                <TaskItems tasks={tasks} selectedTab={selectedTab} />\r\n            ) : (\r\n            <p> No Tasks Yet</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tasks;","import React, {useState} from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Tasks from './Tasks';\r\n\r\nconst Content = () => {\r\n    const [selectedTab, setSelectedTab]= useState(\"INBOX\");\r\n    return (\r\n        <section className=\"content\">\r\n            <Sidebar selectedTab={selectedTab} setSelectedTab={setSelectedTab} />\r\n            <Tasks selectedTab={selectedTab} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react';\r\nimport Header from './components/Header';\r\nimport Content from './components/Content';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n        <Header />\r\n        <Content />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}